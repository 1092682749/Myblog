<mxfile host="app.diagrams.net" modified="2021-06-10T14:16:59.538Z" agent="5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36" etag="v83FWR7XpmSZGvUivj8h" version="14.7.6" type="github">
  <diagram id="mtetrAsdsVfbl5sYTp5w" name="Page-1">
    <mxGraphModel dx="1038" dy="633" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="fJW2ksR1hG_YBAA2tKQd-2" value="&lt;h1&gt;为什么要使用redis&lt;/h1&gt;&lt;p&gt;???????&lt;/p&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="20" y="10" width="330" height="70" as="geometry" />
        </mxCell>
        <mxCell id="fJW2ksR1hG_YBAA2tKQd-7" value="&lt;h1&gt;server.h-定义一些关键的结构体&lt;/h1&gt;&lt;div&gt;redisServer结构体：&lt;/div&gt;&lt;div&gt;&lt;ul style=&quot;box-sizing: border-box ; padding-left: 2em ; margin-top: 0px ; margin-bottom: 16px ; color: rgb(36 , 41 , 46) ; font-family: , &amp;#34;blinkmacsystemfont&amp;#34; , &amp;#34;segoe ui&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif , &amp;#34;apple color emoji&amp;#34; , &amp;#34;segoe ui emoji&amp;#34; ; font-size: 16px ; background-color: rgb(255 , 255 , 255)&quot;&gt;&lt;li style=&quot;box-sizing: border-box&quot;&gt;&lt;code style=&quot;box-sizing: border-box ; font-family: , &amp;#34;consolas&amp;#34; , &amp;#34;liberation mono&amp;#34; , &amp;#34;menlo&amp;#34; , monospace ; font-size: 13.6px ; padding: 0.2em 0.4em ; margin: 0px ; border-radius: 6px&quot;&gt;server.db&lt;/code&gt;&amp;nbsp;is an array of Redis databases, where data is stored.&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box ; margin-top: 0.25em&quot;&gt;&lt;code style=&quot;box-sizing: border-box ; font-family: , &amp;#34;consolas&amp;#34; , &amp;#34;liberation mono&amp;#34; , &amp;#34;menlo&amp;#34; , monospace ; font-size: 13.6px ; padding: 0.2em 0.4em ; margin: 0px ; border-radius: 6px&quot;&gt;server.commands&lt;/code&gt;&amp;nbsp;is the command table.&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box ; margin-top: 0.25em&quot;&gt;&lt;code style=&quot;box-sizing: border-box ; font-family: , &amp;#34;consolas&amp;#34; , &amp;#34;liberation mono&amp;#34; , &amp;#34;menlo&amp;#34; , monospace ; font-size: 13.6px ; padding: 0.2em 0.4em ; margin: 0px ; border-radius: 6px&quot;&gt;server.clients&lt;/code&gt;&amp;nbsp;is a linked list of clients connected to the server.&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box ; margin-top: 0.25em&quot;&gt;&lt;code style=&quot;box-sizing: border-box ; font-family: , &amp;#34;consolas&amp;#34; , &amp;#34;liberation mono&amp;#34; , &amp;#34;menlo&amp;#34; , monospace ; font-size: 13.6px ; padding: 0.2em 0.4em ; margin: 0px ; border-radius: 6px&quot;&gt;server.master&lt;/code&gt;&amp;nbsp;is a special client, the master, if the instance is a replica.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="20" y="80" width="590" height="170" as="geometry" />
        </mxCell>
        <mxCell id="fJW2ksR1hG_YBAA2tKQd-8" value="&lt;h1&gt;server.c-main方法&lt;/h1&gt;&lt;div&gt;重要的方法：&lt;/div&gt;&lt;div&gt;&lt;ul style=&quot;box-sizing: border-box ; padding-left: 2em ; margin-top: 0px ; margin-bottom: 16px ; color: rgb(36 , 41 , 46) ; font-family: , &amp;#34;blinkmacsystemfont&amp;#34; , &amp;#34;segoe ui&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif , &amp;#34;apple color emoji&amp;#34; , &amp;#34;segoe ui emoji&amp;#34; ; font-size: 16px ; background-color: rgb(255 , 255 , 255)&quot;&gt;&lt;li style=&quot;box-sizing: border-box&quot;&gt;&lt;code style=&quot;box-sizing: border-box ; font-family: , &amp;#34;consolas&amp;#34; , &amp;#34;liberation mono&amp;#34; , &amp;#34;menlo&amp;#34; , monospace ; font-size: 13.6px ; padding: 0.2em 0.4em ; margin: 0px ; border-radius: 6px&quot;&gt;initServerConfig()&lt;/code&gt;&amp;nbsp;sets up the default values of the&amp;nbsp;&lt;code style=&quot;box-sizing: border-box ; font-family: , &amp;#34;consolas&amp;#34; , &amp;#34;liberation mono&amp;#34; , &amp;#34;menlo&amp;#34; , monospace ; font-size: 13.6px ; padding: 0.2em 0.4em ; margin: 0px ; border-radius: 6px&quot;&gt;server&lt;/code&gt;&amp;nbsp;structure.&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box ; margin-top: 0.25em&quot;&gt;&lt;code style=&quot;box-sizing: border-box ; font-family: , &amp;#34;consolas&amp;#34; , &amp;#34;liberation mono&amp;#34; , &amp;#34;menlo&amp;#34; , monospace ; font-size: 13.6px ; padding: 0.2em 0.4em ; margin: 0px ; border-radius: 6px&quot;&gt;initServer()&lt;/code&gt;&amp;nbsp;allocates the data structures needed to operate, setup the listening socket, and so forth.&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box ; margin-top: 0.25em&quot;&gt;&lt;code style=&quot;box-sizing: border-box ; font-family: , &amp;#34;consolas&amp;#34; , &amp;#34;liberation mono&amp;#34; , &amp;#34;menlo&amp;#34; , monospace ; font-size: 13.6px ; padding: 0.2em 0.4em ; margin: 0px ; border-radius: 6px&quot;&gt;aeMain()&lt;/code&gt;&amp;nbsp;starts the event loop which listens for new connections.&lt;/li&gt;&lt;/ul&gt;&lt;span style=&quot;background-color: rgb(255 , 255 , 255) ; color: rgb(36 , 41 , 46) ; font-size: 16px&quot;&gt;&amp;nbsp; There are two special functions called periodically by the event loop:&lt;/span&gt;&lt;ul style=&quot;box-sizing: border-box ; padding-left: 2em ; margin-top: 0px ; margin-bottom: 16px ; color: rgb(36 , 41 , 46) ; font-family: , &amp;#34;blinkmacsystemfont&amp;#34; , &amp;#34;segoe ui&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif , &amp;#34;apple color emoji&amp;#34; , &amp;#34;segoe ui emoji&amp;#34; ; font-size: 16px ; background-color: rgb(255 , 255 , 255)&quot;&gt;&lt;li&gt;&lt;code style=&quot;box-sizing: border-box ; font-size: 13.6px ; padding: 0.2em 0.4em ; margin: 0px ; border-radius: 6px&quot;&gt;serverCron()&lt;/code&gt;&amp;nbsp;is called periodically (according to&amp;nbsp;&lt;code style=&quot;box-sizing: border-box ; font-size: 13.6px ; padding: 0.2em 0.4em ; margin: 0px ; border-radius: 6px&quot;&gt;server.hz&lt;/code&gt;&amp;nbsp;frequency), and performs tasks that must be performed from time to time, like checking for timed out clients.&lt;br&gt;&lt;/li&gt;&lt;li&gt;&lt;code style=&quot;box-sizing: border-box ; font-size: 13.6px ; padding: 0.2em 0.4em ; margin: 0px ; border-radius: 6px&quot;&gt;beforeSleep()&lt;/code&gt;&amp;nbsp;is called every time the event loop fired, Redis served a few requests, and is returning back into the event loop.&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="20" y="290" width="770" height="260" as="geometry" />
        </mxCell>
        <mxCell id="fJW2ksR1hG_YBAA2tKQd-9" value="&lt;h1&gt;server.c-其他比较重要的方法定义&lt;/h1&gt;&lt;div&gt;&lt;ul style=&quot;box-sizing: border-box ; padding-left: 2em ; margin-top: 0px ; margin-bottom: 16px ; color: rgb(36 , 41 , 46) ; font-family: , &amp;#34;blinkmacsystemfont&amp;#34; , &amp;#34;segoe ui&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif , &amp;#34;apple color emoji&amp;#34; , &amp;#34;segoe ui emoji&amp;#34; ; font-size: 16px ; background-color: rgb(255 , 255 , 255)&quot;&gt;&lt;li style=&quot;box-sizing: border-box&quot;&gt;&lt;code style=&quot;box-sizing: border-box ; font-family: , &amp;#34;consolas&amp;#34; , &amp;#34;liberation mono&amp;#34; , &amp;#34;menlo&amp;#34; , monospace ; font-size: 13.6px ; padding: 0.2em 0.4em ; margin: 0px ; border-radius: 6px&quot;&gt;call()&lt;/code&gt;&amp;nbsp;is used in order to call a given command in the context of a given client.&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box ; margin-top: 0.25em&quot;&gt;&lt;code style=&quot;box-sizing: border-box ; font-family: , &amp;#34;consolas&amp;#34; , &amp;#34;liberation mono&amp;#34; , &amp;#34;menlo&amp;#34; , monospace ; font-size: 13.6px ; padding: 0.2em 0.4em ; margin: 0px ; border-radius: 6px&quot;&gt;activeExpireCycle()&lt;/code&gt;&amp;nbsp;handles eviction of keys with a time to live set via the&amp;nbsp;&lt;code style=&quot;box-sizing: border-box ; font-family: , &amp;#34;consolas&amp;#34; , &amp;#34;liberation mono&amp;#34; , &amp;#34;menlo&amp;#34; , monospace ; font-size: 13.6px ; padding: 0.2em 0.4em ; margin: 0px ; border-radius: 6px&quot;&gt;EXPIRE&lt;/code&gt;&amp;nbsp;command.&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box ; margin-top: 0.25em&quot;&gt;&lt;code style=&quot;box-sizing: border-box ; font-family: , &amp;#34;consolas&amp;#34; , &amp;#34;liberation mono&amp;#34; , &amp;#34;menlo&amp;#34; , monospace ; font-size: 13.6px ; padding: 0.2em 0.4em ; margin: 0px ; border-radius: 6px&quot;&gt;performEvictions()&lt;/code&gt;&amp;nbsp;is called when a new write command should be performed but Redis is out of memory according to the&amp;nbsp;&lt;code style=&quot;box-sizing: border-box ; font-family: , &amp;#34;consolas&amp;#34; , &amp;#34;liberation mono&amp;#34; , &amp;#34;menlo&amp;#34; , monospace ; font-size: 13.6px ; padding: 0.2em 0.4em ; margin: 0px ; border-radius: 6px&quot;&gt;maxmemory&lt;/code&gt;&amp;nbsp;directive.&lt;/li&gt;&lt;li style=&quot;box-sizing: border-box ; margin-top: 0.25em&quot;&gt;The global variable&amp;nbsp;&lt;code style=&quot;box-sizing: border-box ; font-family: , &amp;#34;consolas&amp;#34; , &amp;#34;liberation mono&amp;#34; , &amp;#34;menlo&amp;#34; , monospace ; font-size: 13.6px ; padding: 0.2em 0.4em ; margin: 0px ; border-radius: 6px&quot;&gt;redisCommandTable&lt;/code&gt;&amp;nbsp;defines all the Redis commands, specifying the name of the command, the function implementing the command, the number of arguments required, and other properties of each command.&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;font color=&quot;#24292e&quot;&gt;&lt;span style=&quot;font-size: 16px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#24292e&quot;&gt;&lt;span style=&quot;font-size: 16px&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="20" y="610" width="720" height="220" as="geometry" />
        </mxCell>
        <mxCell id="fJW2ksR1hG_YBAA2tKQd-11" value="&lt;b&gt;&lt;font style=&quot;font-size: 18px&quot;&gt;并不是所有的对象都会被包装成redisObject：&lt;/font&gt;&lt;/b&gt;&lt;br&gt;&lt;span style=&quot;color: rgb(36 , 41 , 46) ; font-family: , &amp;#34;blinkmacsystemfont&amp;#34; , &amp;#34;segoe ui&amp;#34; , &amp;#34;helvetica&amp;#34; , &amp;#34;arial&amp;#34; , sans-serif , &amp;#34;apple color emoji&amp;#34; , &amp;#34;segoe ui emoji&amp;#34; ; font-size: 16px ; background-color: rgb(255 , 255 , 255)&quot;&gt;Redis objects are used extensively in the Redis internals, however in order to avoid the overhead of indirect accesses, recently in many places we just use plain dynamic strings not wrapped inside a Redis object.&lt;/span&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="40" y="880" width="500" height="120" as="geometry" />
        </mxCell>
        <mxCell id="jB1BSkEtGHHW1r5DU6Ng-1" value="" style="endArrow=none;html=1;" parent="1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="20" y="1100" as="sourcePoint" />
            <mxPoint x="760" y="1100" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="jB1BSkEtGHHW1r5DU6Ng-2" value="&lt;h1&gt;SDS&lt;/h1&gt;&lt;div&gt;&lt;span style=&quot;color: rgb(62 , 67 , 73) ; font-family: sans-serif ; font-size: 16px ; background-color: rgb(255 , 255 , 255)&quot;&gt;Redis 没有直接使用 C 语言传统的字符串表示（以空字符结尾的字符数组）， 而是自己构建了一种名为简单动态字符串（simple dynamic string，SDS）的抽象类型， 并将 SDS 用作 Redis 的默认字符串表示。&lt;/span&gt;&lt;br&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="30" y="1140" width="650" height="120" as="geometry" />
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-1" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="175" y="1980" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-2" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="295" y="1980" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-3" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="415" y="1980" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-4" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="535" y="1980" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-5" value="" style="rounded=0;whiteSpace=wrap;html=1;rotation=90;" vertex="1" parent="1">
          <mxGeometry x="-70" y="2045" width="250" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-6" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="175" y="2080" width="60" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-7" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="235" y="2080" width="60" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-8" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="295" y="2080" width="60" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-9" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="355" y="2080" width="60" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-10" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="415" y="2080" width="60" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-11" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="475" y="2080" width="60" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-12" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="535" y="2080" width="60" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-13" value="" style="rounded=0;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="595" y="2080" width="60" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-14" value="" style="endArrow=classic;html=1;entryX=0;entryY=0;entryDx=0;entryDy=0;" edge="1" parent="1" target="ROjB1w9-5IL8X97d8nUU-1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="175" y="1930" as="sourcePoint" />
            <mxPoint x="195" y="1920" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-15" value="" style="endArrow=classic;html=1;entryX=0;entryY=1;entryDx=0;entryDy=0;" edge="1" parent="1" target="ROjB1w9-5IL8X97d8nUU-6">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="175" y="2250" as="sourcePoint" />
            <mxPoint x="175" y="2220" as="targetPoint" />
            <Array as="points">
              <mxPoint x="175" y="2190" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-16" value="" style="shape=flexArrow;endArrow=classic;html=1;entryX=-0.03;entryY=0.65;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" target="ROjB1w9-5IL8X97d8nUU-1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="95" y="2080" as="sourcePoint" />
            <mxPoint x="455" y="2060" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-17" value="" style="shape=flexArrow;endArrow=classic;html=1;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="95" y="2090" as="sourcePoint" />
            <mxPoint x="165" y="2150" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-18" value="dubble*" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="185" y="1920" width="80" height="20" as="geometry" />
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-19" value="int*" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="185" y="2240" width="80" height="20" as="geometry" />
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-23" value="对于同一段内存地址的访问，使用不同类型指针意味着cpu在读取这段内存的时候每次的偏移两不同，地址偏移量为指针类型的大小比如int 4 byte， dubble 8 byte。值得注意指针的加法运算也符合这一原则" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="1">
          <mxGeometry x="70" y="1850" width="550" height="60" as="geometry" />
        </mxCell>
        <mxCell id="ROjB1w9-5IL8X97d8nUU-24" value="&lt;pre style=&quot;background-color: #2b2b2b ; color: #a9b7c6 ; font-family: &amp;quot;jetbrains mono&amp;quot; , monospace ; font-size: 9.8pt&quot;&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;typedef char &lt;/span&gt;*&lt;span style=&quot;color: #b9bcd1&quot;&gt;sds&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;/* Note: sdshdr5 is never used, we just access the flags byte directly.&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt; * However is here to document the layout of type 5 SDS strings. */&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;struct __attribute__ &lt;/span&gt;((__packed__)) &lt;span style=&quot;color: #b5b6e3&quot;&gt;sdshdr5 &lt;/span&gt;{&lt;br&gt;    &lt;span style=&quot;color: #cc7832&quot;&gt;unsigned char &lt;/span&gt;&lt;span style=&quot;color: #9373a5&quot;&gt;flags&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;/* 3 lsb of type, and 5 msb of string length */&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;char &lt;/span&gt;&lt;span style=&quot;color: #9373a5&quot;&gt;buf&lt;/span&gt;[]&lt;span style=&quot;color: #cc7832&quot;&gt;;&lt;br&gt;&lt;/span&gt;}&lt;span style=&quot;color: #cc7832&quot;&gt;;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;struct __attribute__ &lt;/span&gt;((__packed__)) &lt;span style=&quot;color: #b5b6e3&quot;&gt;sdshdr8 &lt;/span&gt;{&lt;br&gt;    &lt;span style=&quot;color: #b9bcd1&quot;&gt;uint8_t &lt;/span&gt;&lt;span style=&quot;color: #9373a5&quot;&gt;len&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;/* used */&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #b9bcd1&quot;&gt;uint8_t &lt;/span&gt;&lt;span style=&quot;color: #9373a5&quot;&gt;alloc&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;/* excluding the header and null terminator */&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;unsigned char &lt;/span&gt;&lt;span style=&quot;color: #9373a5&quot;&gt;flags&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;/* 3 lsb of type, 5 unused bits */&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;char &lt;/span&gt;&lt;span style=&quot;color: #9373a5&quot;&gt;buf&lt;/span&gt;[]&lt;span style=&quot;color: #cc7832&quot;&gt;;&lt;br&gt;&lt;/span&gt;}&lt;span style=&quot;color: #cc7832&quot;&gt;;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;struct __attribute__ &lt;/span&gt;((__packed__)) &lt;span style=&quot;color: #b5b6e3&quot;&gt;sdshdr16 &lt;/span&gt;{&lt;br&gt;    &lt;span style=&quot;color: #b9bcd1&quot;&gt;uint16_t &lt;/span&gt;&lt;span style=&quot;color: #9373a5&quot;&gt;len&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;/* used */&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #b9bcd1&quot;&gt;uint16_t &lt;/span&gt;&lt;span style=&quot;color: #9373a5&quot;&gt;alloc&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;/* excluding the header and null terminator */&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;unsigned char &lt;/span&gt;&lt;span style=&quot;color: #9373a5&quot;&gt;flags&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;/* 3 lsb of type, 5 unused bits */&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;char &lt;/span&gt;&lt;span style=&quot;color: #9373a5&quot;&gt;buf&lt;/span&gt;[]&lt;span style=&quot;color: #cc7832&quot;&gt;;&lt;br&gt;&lt;/span&gt;}&lt;span style=&quot;color: #cc7832&quot;&gt;;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;struct __attribute__ &lt;/span&gt;((__packed__)) &lt;span style=&quot;color: #b5b6e3&quot;&gt;sdshdr32 &lt;/span&gt;{&lt;br&gt;    &lt;span style=&quot;color: #b9bcd1&quot;&gt;uint32_t &lt;/span&gt;&lt;span style=&quot;color: #9373a5&quot;&gt;len&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;/* used */&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #b9bcd1&quot;&gt;uint32_t &lt;/span&gt;&lt;span style=&quot;color: #9373a5&quot;&gt;alloc&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;/* excluding the header and null terminator */&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;unsigned char &lt;/span&gt;&lt;span style=&quot;color: #9373a5&quot;&gt;flags&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;/* 3 lsb of type, 5 unused bits */&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;char &lt;/span&gt;&lt;span style=&quot;color: #9373a5&quot;&gt;buf&lt;/span&gt;[]&lt;span style=&quot;color: #cc7832&quot;&gt;;&lt;br&gt;&lt;/span&gt;}&lt;span style=&quot;color: #cc7832&quot;&gt;;&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;struct __attribute__ &lt;/span&gt;((__packed__)) &lt;span style=&quot;color: #b5b6e3&quot;&gt;sdshdr64 &lt;/span&gt;{&lt;br&gt;    &lt;span style=&quot;color: #b9bcd1&quot;&gt;uint64_t &lt;/span&gt;&lt;span style=&quot;color: #9373a5&quot;&gt;len&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;/* used */&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #b9bcd1&quot;&gt;uint64_t &lt;/span&gt;&lt;span style=&quot;color: #9373a5&quot;&gt;alloc&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;/* excluding the header and null terminator */&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;unsigned char &lt;/span&gt;&lt;span style=&quot;color: #9373a5&quot;&gt;flags&lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;; &lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;/* 3 lsb of type, 5 unused bits */&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: #808080&quot;&gt;    &lt;/span&gt;&lt;span style=&quot;color: #cc7832&quot;&gt;char &lt;/span&gt;&lt;span style=&quot;color: #9373a5&quot;&gt;buf&lt;/span&gt;[]&lt;span style=&quot;color: #cc7832&quot;&gt;;&lt;br&gt;&lt;/span&gt;}&lt;span style=&quot;color: #cc7832&quot;&gt;;&lt;/span&gt;&lt;/pre&gt;" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1">
          <mxGeometry x="30" y="1270" width="490" height="480" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
